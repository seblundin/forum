type Thread {
  id: ID!
  title: String
  content: String!
  uploadtime: String!
  mediacontent: String
  owner: User!
  parent: Thread
}

type ThreadOutput {
  id: ID!
  title: String
  content: String!
  uploadtime: String!
  mediacontent: String
  owner: User!
}

input ThreadInput {
  title: String!
  content: String!
  uploadtime: String!
  mediacontent: String
  owner: String!
}

type CommentOutput {
  id: ID!
  content: String!
  uploadtime: String!
  mediacontent: String
  owner: User!
  parent: Thread!
}

input CommentInput {
  content: String!
  uploadtime: String!
  mediacontent: String!
  owner: String!
  parent: String!
}

type Query {
  threads: [Thread]
  threadById(id: ID!): Thread
  threadByOwner(ownerId: ID!): Thread
  commentsByThread(threadId: ID!): [Thread]
}

type Mutation {
  addThread(thread: ThreadInput!): ThreadOutput
  updateThread(id: ID!, thread: ThreadInput!): ThreadOutput
  deleteThread(id: ID!): Thread
  addComment(comment: CommentInput!): CommentOutput
  updateComment(id: ID!, comment: CommentInput!): CommentOutput
  deleteComment(id: ID!): Thread
}
